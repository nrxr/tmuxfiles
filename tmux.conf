# Re-assigning C-b to C-a
set-option -g prefix C-a

# Bindings for C-a a 
bind-key a send-prefix

# Set status bar
set -g status-bg black
set -g status-fg white
set -g status-left '#[fg=green]#H/#S '

# Highlight active windows
setw -g window-status-current-style bg=yellow
setw -g window-status-current-style fg=black

# Set mode-keys to vi
set-window-option -g mode-keys vi
setw -g mode-keys vi

# Set window notifications
# setw -g monitor-activity on
# set -g visual-activity on

# returning to the default setup I had and after upgrade to 1.9a stopped working
bind c new-window -c "#{pane_current_path}"

# Allow tmux to pass trough Ctrl, Alt and Shift modifiers
setw -g xterm-keys on

# Bindings for vertical + horizontal splits
unbind %
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind C-k resize-pane -U 5
bind C-j resize-pane -D 5
bind C-h resize-pane -L 5
bind C-l resize-pane -R 5

# Base for numbering is 1, not 0
set -g base-index 1

# If it's a MacOS, then run this:
#if-shell 'test "$(uname -s)" = "Darwin"' \
#  'source ~/.tmux.darwin.conf'

# If it's a Linux, then run this:
# if-shell 'test "$(uname -s)" = "Linux"' \
#  'source ~/.tmux.linux.conf'

set -g default-terminal "screen-256color-bce"

# Tc enables true color
set -ag terminal-overrides ",*256col*:colors=256:Tc"
set -ga terminal-overrides ",*256col*:Tc"

# Ms modifies OSC 52 clipboard handling to work with mosh, see
# https://gist.github.com/yudai/95b20e3da66df1b066531997f982b57b
set -ag terminal-overrides "vte*:XT:Ms=\\E]52;c;%p2%s\\7,xterm*:XT:Ms=\\E]52;c;%p2%s\\7"

# enable OSC 52 clipboard
# https://medium.freecodecamp.org/tmux-in-practice-integration-with-system-clipboard-bcd72c62ff7b
set -g set-clipboard on

# use bracketed paste, if the running application (vim/emacs/weechat) has
# sent the terminal code to enable it.
bind-key ] paste-buffer -p

setw -g aggressive-resize on

# http://comments.gmane.org/gmane.emacs.vim-emulation/1557
set -s escape-time 0

# transfer copied text to attached terminal with yank
bind-key -T copy-mode-vi Y send-keys -X copy-pipe 'yank > #{pane_tty}'

# transfer most-recently copied text to attached terminal with yank
bind-key -n M-y run-shell 'tmux save-buffer - | yank > #{pane_tty}'

# transfer previously copied text (chosen from a menu) to attached terminal
bind-key -n M-Y choose-buffer 'run-shell "tmux save-buffer -b \"%%%\" - | yank > #{pane_tty}"'

if-shell 'test -d ~/.tmux/themes/nord-tmux' \
  'source ~/.tmux.nord.conf'

bind-key R source-file ~/.tmux.conf \; display-message "source-file done; Reloaded ~/.tmux.conf"
